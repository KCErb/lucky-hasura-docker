#!/bin/bash
# Exit if any subcommand fails
set -e
set -o pipefail

# Seed DB?
SEED_DB="false"
while getopts 's' flag; do
  case "${flag}" in
    s) SEED_DB="true" ;;
    *) ;;
  esac
done

source "${BASH_SOURCE%/*}/../functions/commons"

printf "\n▸ Migrating once postgres is up\n"
/data/script/docker/wait-for-postgres

DB_NAME="${LUCKY_ENV:-development}"

printf "\n▸ Creating $DB_NAME database.\n"
if [ "$LUCKY_ENV" == "production" ]; then
  /data/tasks/run_task db.create | indent
else
  lucky db.create | indent
fi

printf "\n▸ Migrating database.\n"
if [ "$LUCKY_ENV" == "production" ]; then
  /data/tasks/run_task db.migrate | indent
else
  lucky db.migrate | indent
fi

if [ "$SEED_DB" == "true" ]; then
  printf "\n▸ Seeding database with required seeds\n"
  if [ "$LUCKY_ENV" == "production" ]; then
    /data/tasks/run_task db.create_required_seeds | indent
  else
    lucky db.create_required_seeds | indent
    printf "\n▸ Seeding the database with sample seeds\n"
    lucky db.create_sample_seeds | indent
  fi
fi
