#!/bin/bash

source "${BASH_SOURCE%/*}/functions/commons"

check_for_up

start_lucky() {
  # TODO: fix `up run` so that we can instead run
  # up run -e DATABASE_URL=postgres etc.
  docker-compose -f Docker/docker-compose.yml -f Docker/docker-compose.dev.yml run -d -e DATABASE_URL=postgres://postgres:@postgres:5432/PROJECT_NAME_test -e LUCKY_ENV=test --name PROJECT_NAME_lucky_test -p 5001:5000 lucky
  docker exec -it PROJECT_NAME_lucky_test /data/script/docker/update-db
}

start_hasura() {
  # TODO: fix `up run` so that we can instead run:
  # up run -d --name PROJECT_NAME_hasura_test -e HASURA_GRAPHQL_DATABASE_URL=postgres etc
  docker-compose -f Docker/docker-compose.yml -f Docker/docker-compose.dev.yml run -d --name PROJECT_NAME_hasura_test -e HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:@postgres:5432/PROJECT_NAME_test -p 8081:8080 -p 9696:9695 -p 9694:9693 hasura
}

printf "\n▸ Initializing test environment\n"
docker-sync start | indent
start_lucky

printf "\n▸ Starting Hasura test container.\n"
start_hasura
until curl -s http://localhost:8081/healthz > /dev/null; do
  printf "Hasura not ready - checking again in 5s\n" | indent
  sleep 5
done
printf "\n✔ Hasura is ready.\n"
printf "\nStarting bash session in PROJECT_NAME_lucky_test ...\n"
docker exec -it PROJECT_NAME_lucky_test /bin/bash

printf "\n▸ Removing test containers.\n"
docker rm -fv PROJECT_NAME_hasura_test
docker rm -fv PROJECT_NAME_lucky_test